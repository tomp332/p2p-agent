// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/server/managers/base.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	configs "github.com/tomp332/p2p-agent/pkg/utils/configs"
)

// MockAuthenticationManager is a mock of AuthenticationManager interface.
type MockAuthenticationManager struct {
	ctrl     *gomock.Controller
	recorder *MockAuthenticationManagerMockRecorder
}

// MockAuthenticationManagerMockRecorder is the mock recorder for MockAuthenticationManager.
type MockAuthenticationManagerMockRecorder struct {
	mock *MockAuthenticationManager
}

// NewMockAuthenticationManager creates a new mock instance.
func NewMockAuthenticationManager(ctrl *gomock.Controller) *MockAuthenticationManager {
	mock := &MockAuthenticationManager{ctrl: ctrl}
	mock.recorder = &MockAuthenticationManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthenticationManager) EXPECT() *MockAuthenticationManagerMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockAuthenticationManager) Generate(username string, nodeType configs.NodeType) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", username, nodeType)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockAuthenticationManagerMockRecorder) Generate(username, nodeType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockAuthenticationManager)(nil).Generate), username, nodeType)
}

// Verify mocks base method.
func (m *MockAuthenticationManager) Verify(accessToken string) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", accessToken)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify.
func (mr *MockAuthenticationManagerMockRecorder) Verify(accessToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockAuthenticationManager)(nil).Verify), accessToken)
}
